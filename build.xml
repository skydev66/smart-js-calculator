<project name="scratchcalc" default="debug">

	<loadproperties srcfile="build.properties" />

	<target name="debug" depends="clean, init, copy,concatenatejs">
		<echo>ScratchCalc Version ${version} (Debug Version)</echo>
	</target>

	<target name="production" depends="clean, init, copy,concatenatejs,minify,documentation,test">
		<echo>ScratchCalc Version ${version}</echo>
	</target>

	<target name="copy" description="Compiles coffeescript and SASS files,copies the rest">
		<echo>Copying Coffeescript Files</echo>
		 <copy todir="${build.dir}">
		 	<fileset dir="${src.dir}" includes="**/*.html,**/*.css,**/*.js" />
		 </copy>
		 <exec executable="coffee">
			  <arg value="--compile"/>
			  <arg value="--map" />
			  <arg value="--output" />
			  <arg value="${build.script.dir}" />
			  <arg value="${src.script.dir}" />
		 </exec>
		 <mkdir dir="${build.styles.dir}" />
		 <apply executable="sass" dest="${build.dir}" verbose="true" force="true" failonerror="true">
	        <arg value="--unix-newlines" />
	        <srcfile />
	        <targetfile />
	        <filelist dir ="${src.dir}" files="styles/scratch.sass" />
	        <!--<fileset dir="${src.dir}" includes="**/*.sass"  />-->
	        <mapper type="glob" from="*.sass" to="*.css"/>
    	</apply>
	</target>

	<target name="concatenatejs" description="Concatenate All the JS together">
		<!-- Instead of concatenating the JS files directly, use coffee to preserve the source map -->
		<echo>Concatenating the JS</echo>
		<concat destfile="${build.libs}">
		 	 <filelist dir ="${build.script.dir}" files="lib/jquery.js,lib/knockout.js,lib/BigDecimal.js" />

			  <fileset dir="${build.script.dir}/lib" includes="**/*.js"/>
		</concat>
		<apply executable="coffee"  verbose="true" force="true" failonerror="true" parallel="true">
	    <arg value="--compile" />
	    <arg value="--map" />
	    <arg value="--join" />
	    <arg value="${build.script.output}" />
	    <srcfile />
	    <filelist dir ="${src.script.dir}" files="editor/toolkit.coffee,editor/markupGen.coffee,parser/eqTreeBuilder.coffee,parser/NumberValue.coffee,parser/eqScanner.coffee,parser/eqTokenizer.coffee,parser/tablePlaceHolder.coffee,parser/EQParser.coffee,parser/calcFramework.coffee,editor/editor.coffee" />
    </apply>
	</target>

	<target name="documentation" description="Generate Docco Documentation for coffee files">
		<echo>Generating Documentation with Docco</echo>
		<apply executable="docco" verbose="true" force="true" failonerror="true">
	        <srcfile />
	        <fileset dir ="${src.script.dir}" >
	        	<include name="**/*.coffee"/>
	        </fileset>
    	</apply>
	</target>

	<target name="test" description="Generate the JS for testing with Jasmine">
		<!-- Ideally this would run a server side jasmine test, but that requires better dependency management than we have right now-->
		<echo>Generating the Test JS with jasmine</echo>
		<apply executable="coffee"  verbose="true" force="true" failonerror="true" parallel="true">
	    <arg value="--compile" />
	    <arg value="--join" />
	    <arg value="${test.output}" />
	    <srcfile />
	    <fileset dir ="${test.dir}" >
	    	<include name="**/*.coffee"/>
	    </fileset>
    </apply>
	</target>

	<target name="minify" description="Minify the JS for Production">
		<echo>Minifying the JS For Production with UglifyJS</echo>
		<apply executable="uglifyjs" verbose="true" force="true" failonerror="true">
	        <srcfile />
	        <arg value="--output" />
	        <arg value="${build.script.output}" />
	        <filelist  files ="${build.script.output}"/>
    	</apply>
	</target>

	<target name= "init">
		<mkdir dir="${build.dir}" />
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

</project>